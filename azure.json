{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "StorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "The name of the storage account to use."
      }
    },
    "StorageAccountContainerName": {
      "type": "string",
      "metadata": {
        "description": "The name of the container to use in the storage account."
      }
    },
    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "The size of Azure VM (e.g. A1_v2)"
      }
    },
    "username": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "password": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "dnsPrefix": {
      "type": "string",
      "defaultValue": "volvodlgw",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
      }
    },
    "httpsFrom": {
      "type": "string",
      "defaultValue": "*",
      "metadata": {
        "description": "The IP address or CIDR block from where to allow HTTPS connections to Virtual Machine."
      }
    },
    "sshFrom": {
      "type": "string",
      "defaultValue": "86.127.175.29",
      "metadata": {
        "description": "The IP address or CIDR block from where to allow SSH connections to Virtual Machine."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources, defaults to location of the resource group."
      }
    }
  },
  "variables": {
    "scenarioPrefix": "blobstorageftp",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageVersion": "18.04-LTS",
    "asgName": "[concat(variables('scenarioPrefix'),'AppSecGroup')]",
    "asgId": "[resourceId('Microsoft.Network/applicationSecurityGroups',variables('asgName'))]",
    "nsgName": "[concat(variables('scenarioPrefix'),'NetSecGroup')]",
    "nsgId": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]",
    "nicName": "[concat(variables('scenarioPrefix'),'Nic')]",
    "nicId" : "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]",
    "vnetCidrBlock": "10.0.0.0/16",
    "subnetName": "[concat(variables('scenarioPrefix'),'Subnet')]",
    "subnetCidrBlock": "10.0.0.0/24",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressType": "Dynamic",
    "publicIPAddressName": "[concat(variables('scenarioPrefix'),'PublicIp')]",
    "publicIPAddressId": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
    "vmName": "[concat(variables('scenarioPrefix'),'VM')]",
    "virtualNetworkName": "[concat(variables('scenarioPrefix'),'Vnet')]",
    "subnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "[variables('storageAccountType')]"
      },
      "kind": "StorageV2",
      "properties": {},
      "resources": [
        {
          "type": "blobServices/containers",
          "apiVersion": "2019-06-01",
          "name": "[concat('default/', parameters('StorageAccountContainerName'))]",
          "dependsOn": [
            "[parameters('StorageAccountName')]"
          ],
          "properties": {
            "publicAccess": "None"
          }
        }
      ]
    },
    {
      "name": "[variables('asgName')]",
      "type": "Microsoft.Network/applicationSecurityGroups",
      "apiVersion": "2020-04-01",
      "location": "[parameters('location')]",
      "properties": {}
    },
    {
      "name": "[variables('nsgName')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-05-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/applicationSecurityGroups/', variables('asgName'))]"
      ],
      "properties": {
        "securityRules": [
          {
            "name": "AllowFtpAll",
            "properties": {
              "description": "Allow FTP traffic to VM",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "direction": "Inbound",
              "access": "Allow",
              "priority": 100,
              "protocol": "Tcp",
              "destinationPortRange": "21",
              "destinationApplicationSecurityGroups": [
                { "id": "[variables('asgId')]" }
              ]
            }
          },
          {
            "name": "AllowFtpPassiveAll",
            "properties": {
              "description": "Allow FTP passive traffic to VM",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "direction": "Inbound",
              "access": "Allow",
              "priority": 110,
              "protocol": "Tcp",
              "destinationPortRange": "50000-50400",
              "destinationApplicationSecurityGroups": [
                { "id": "[variables('asgId')]" }
              ]
            }
          },
          {
            "name": "AllowHttps",
            "properties": {
              "description": "Allow HTTPS traffic to VM",
              "sourceAddressPrefix": "[parameters('httpsFrom')]",
              "sourcePortRange": "*",
              "direction": "Inbound",
              "access": "Allow",
              "priority": 200,
              "protocol": "Tcp",
              "destinationPortRange": "443",
              "destinationApplicationSecurityGroups": [
                { "id": "[variables('asgId')]" }
              ]
            }
          },
          {
            "name": "AllowSsh",
            "properties": {
              "description": "Allow SSH traffic to VM",
              "sourceAddressPrefix": "[parameters('sshFrom')]",
              "sourcePortRange": "*",
              "direction": "Inbound",
              "access": "Allow",
              "priority": 300,
              "protocol": "Tcp",
              "destinationPortRange": "22",
              "destinationApplicationSecurityGroups": [
                { "id": "[variables('asgId')]" }
              ]
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "apiVersion": "2018-04-01",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsPrefix')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "apiVersion": "2018-04-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnetCidrBlock')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetCidrBlock')]",
              "networkSecurityGroup": {
                "id": "[variables('nsgId')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "apiVersion": "2018-06-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Network/applicationSecurityGroups/', variables('asgName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[variables('publicIPAddressId')]"
              },
              "subnet": {
                "id": "[variables('subnetId')]"
              },
              "applicationSecurityGroups": [
                { "id": "[variables('asgId')]" }
              ]
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "apiVersion": "2020-06-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]",
		    "[parameters('StorageAccountName')]",
        "[parameters('StorageAccountContainerName')]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[concat('Standard_', parameters('vmSize'))]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('username')]",
          "adminPassword": "[parameters('password')]"
        },
        "storageProfile": {
          "osDisk": {
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageVersion')]",
            "version": "latest"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            { "id": "[variables('nicId')]" }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/','extensions')]",
      "apiVersion": "2020-06-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": "[split('https://raw.githubusercontent.com/thebe14/AzureBlobFtp/master/install.sh', ' ')]",
          "commandToExecute": "[concat('bash install.sh --ip=', reference(variables('publicIPAddressId')).IpAddress, ' --account=', parameters('StorageAccountName'), ' --key=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value, ' --container=' , parameters('StorageAccountContainerName'), ' --adminuser=' , parameters('username'), ' --adminpassword=' , parameters('password'))]"
        }
      }
    }
  ]
}
